
2022-05-23 14:46:29,096 - mmdet - INFO - workflow: [('train', 1)], max: 1 epochs
2022-05-23 14:46:29,096 - mmdet - INFO - Checkpoints will be saved to /home/vr/Work/Cropping/my_mmdet/tutorial_exps by HardDiskBackend.
CroppingModel(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (aest_conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (comp_conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): ResLayer(
    (0): Bottleneck(
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer2): ResLayer(
    (0): Bottleneck(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer3): ResLayer(
    (0): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (4): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (5): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer4): ResLayer(
    (0): Bottleneck(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (aes_layer1): ResLayer(
    (0): Bottleneck(
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (aes_layer2): ResLayer(
    (0): Bottleneck(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (aes_layer3): ResLayer(
    (0): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (4): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (5): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (aes_layer4): ResLayer(
    (0): Bottleneck(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (comp_layer1): ResLayer(
    (0): Bottleneck(
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (comp_layer2): ResLayer(
    (0): Bottleneck(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (comp_layer3): ResLayer(
    (0): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (4): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (5): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (comp_layer4): ResLayer(
    (0): Bottleneck(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
)
init_cfg={'type': 'Pretrained', 'checkpoint': 'open-mmlab://detectron2/resnet50_caffe'}
ResLayer(
  (0): Bottleneck(
    (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (downsample): Sequential(
      (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (1): Bottleneck(
    (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
  (2): Bottleneck(
    (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
)
ResLayer(
  (0): Bottleneck(
    (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
    (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (downsample): Sequential(
      (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (1): Bottleneck(
    (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
  (2): Bottleneck(
    (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
  (3): Bottleneck(
    (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
)
ResLayer(
  (0): Bottleneck(
    (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (downsample): Sequential(
      (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (1): Bottleneck(
    (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
  (2): Bottleneck(
    (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
  (3): Bottleneck(
    (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
  (4): Bottleneck(
    (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
  (5): Bottleneck(
    (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
)
ResLayer(
  (0): Bottleneck(
    (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
    (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (downsample): Sequential(
      (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (1): Bottleneck(
    (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
  (2): Bottleneck(
    (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
)



missing keys in source state_dict: backbone.aest_conv1.weight, backbone.comp_conv1.weight, backbone.aes_layer1.0.conv1.weight, backbone.aes_layer1.0.bn1.weight, backbone.aes_layer1.0.bn1.bias, backbone.aes_layer1.0.bn1.running_mean, backbone.aes_layer1.0.bn1.running_var, backbone.aes_layer1.0.conv2.weight, backbone.aes_layer1.0.bn2.weight, backbone.aes_layer1.0.bn2.bias, backbone.aes_layer1.0.bn2.running_mean, backbone.aes_layer1.0.bn2.running_var, backbone.aes_layer1.0.conv3.weight, backbone.aes_layer1.0.bn3.weight, backbone.aes_layer1.0.bn3.bias, backbone.aes_layer1.0.bn3.running_mean, backbone.aes_layer1.0.bn3.running_var, backbone.aes_layer1.0.downsample.0.weight, backbone.aes_layer1.0.downsample.1.weight, backbone.aes_layer1.0.downsample.1.bias, backbone.aes_layer1.0.downsample.1.running_mean, backbone.aes_layer1.0.downsample.1.running_var, backbone.aes_layer1.1.conv1.weight, backbone.aes_layer1.1.bn1.weight, backbone.aes_layer1.1.bn1.bias, backbone.aes_layer1.1.bn1.running_mean, backbone.aes_layer1.1.bn1.running_var, backbone.aes_layer1.1.conv2.weight, backbone.aes_layer1.1.bn2.weight, backbone.aes_layer1.1.bn2.bias, backbone.aes_layer1.1.bn2.running_mean, backbone.aes_layer1.1.bn2.running_var, backbone.aes_layer1.1.conv3.weight, backbone.aes_layer1.1.bn3.weight, backbone.aes_layer1.1.bn3.bias, backbone.aes_layer1.1.bn3.running_mean, backbone.aes_layer1.1.bn3.running_var, backbone.aes_layer1.2.conv1.weight, backbone.aes_layer1.2.bn1.weight, backbone.aes_layer1.2.bn1.bias, backbone.aes_layer1.2.bn1.running_mean, backbone.aes_layer1.2.bn1.running_var, backbone.aes_layer1.2.conv2.weight, backbone.aes_layer1.2.bn2.weight, backbone.aes_layer1.2.bn2.bias, backbone.aes_layer1.2.bn2.running_mean, backbone.aes_layer1.2.bn2.running_var, backbone.aes_layer1.2.conv3.weight, backbone.aes_layer1.2.bn3.weight, backbone.aes_layer1.2.bn3.bias, backbone.aes_layer1.2.bn3.running_mean, backbone.aes_layer1.2.bn3.running_var, backbone.aes_layer2.0.conv1.weight, backbone.aes_layer2.0.bn1.weight, backbone.aes_layer2.0.bn1.bias, backbone.aes_layer2.0.bn1.running_mean, backbone.aes_layer2.0.bn1.running_var, backbone.aes_layer2.0.conv2.weight, backbone.aes_layer2.0.bn2.weight, backbone.aes_layer2.0.bn2.bias, backbone.aes_layer2.0.bn2.running_mean, backbone.aes_layer2.0.bn2.running_var, backbone.aes_layer2.0.conv3.weight, backbone.aes_layer2.0.bn3.weight, backbone.aes_layer2.0.bn3.bias, backbone.aes_layer2.0.bn3.running_mean, backbone.aes_layer2.0.bn3.running_var, backbone.aes_layer2.0.downsample.0.weight, backbone.aes_layer2.0.downsample.1.weight, backbone.aes_layer2.0.downsample.1.bias, backbone.aes_layer2.0.downsample.1.running_mean, backbone.aes_layer2.0.downsample.1.running_var, backbone.aes_layer2.1.conv1.weight, backbone.aes_layer2.1.bn1.weight, backbone.aes_layer2.1.bn1.bias, backbone.aes_layer2.1.bn1.running_mean, backbone.aes_layer2.1.bn1.running_var, backbone.aes_layer2.1.conv2.weight, backbone.aes_layer2.1.bn2.weight, backbone.aes_layer2.1.bn2.bias, backbone.aes_layer2.1.bn2.running_mean, backbone.aes_layer2.1.bn2.running_var, backbone.aes_layer2.1.conv3.weight, backbone.aes_layer2.1.bn3.weight, backbone.aes_layer2.1.bn3.bias, backbone.aes_layer2.1.bn3.running_mean, backbone.aes_layer2.1.bn3.running_var, backbone.aes_layer2.2.conv1.weight, backbone.aes_layer2.2.bn1.weight, backbone.aes_layer2.2.bn1.bias, backbone.aes_layer2.2.bn1.running_mean, backbone.aes_layer2.2.bn1.running_var, backbone.aes_layer2.2.conv2.weight, backbone.aes_layer2.2.bn2.weight, backbone.aes_layer2.2.bn2.bias, backbone.aes_layer2.2.bn2.running_mean, backbone.aes_layer2.2.bn2.running_var, backbone.aes_layer2.2.conv3.weight, backbone.aes_layer2.2.bn3.weight, backbone.aes_layer2.2.bn3.bias, backbone.aes_layer2.2.bn3.running_mean, backbone.aes_layer2.2.bn3.running_var, backbone.aes_layer2.3.conv1.weight, backbone.aes_layer2.3.bn1.weight, backbone.aes_layer2.3.bn1.bias, backbone.aes_layer2.3.bn1.running_mean, backbone.aes_layer2.3.bn1.running_var, backbone.aes_layer2.3.conv2.weight, backbone.aes_layer2.3.bn2.weight, backbone.aes_layer2.3.bn2.bias, backbone.aes_layer2.3.bn2.running_mean, backbone.aes_layer2.3.bn2.running_var, backbone.aes_layer2.3.conv3.weight, backbone.aes_layer2.3.bn3.weight, backbone.aes_layer2.3.bn3.bias, backbone.aes_layer2.3.bn3.running_mean, backbone.aes_layer2.3.bn3.running_var, backbone.aes_layer3.0.conv1.weight, backbone.aes_layer3.0.bn1.weight, backbone.aes_layer3.0.bn1.bias, backbone.aes_layer3.0.bn1.running_mean, backbone.aes_layer3.0.bn1.running_var, backbone.aes_layer3.0.conv2.weight, backbone.aes_layer3.0.bn2.weight, backbone.aes_layer3.0.bn2.bias, backbone.aes_layer3.0.bn2.running_mean, backbone.aes_layer3.0.bn2.running_var, backbone.aes_layer3.0.conv3.weight, backbone.aes_layer3.0.bn3.weight, backbone.aes_layer3.0.bn3.bias, backbone.aes_layer3.0.bn3.running_mean, backbone.aes_layer3.0.bn3.running_var, backbone.aes_layer3.0.downsample.0.weight, backbone.aes_layer3.0.downsample.1.weight, backbone.aes_layer3.0.downsample.1.bias, backbone.aes_layer3.0.downsample.1.running_mean, backbone.aes_layer3.0.downsample.1.running_var, backbone.aes_layer3.1.conv1.weight, backbone.aes_layer3.1.bn1.weight, backbone.aes_layer3.1.bn1.bias, backbone.aes_layer3.1.bn1.running_mean, backbone.aes_layer3.1.bn1.running_var, backbone.aes_layer3.1.conv2.weight, backbone.aes_layer3.1.bn2.weight, backbone.aes_layer3.1.bn2.bias, backbone.aes_layer3.1.bn2.running_mean, backbone.aes_layer3.1.bn2.running_var, backbone.aes_layer3.1.conv3.weight, backbone.aes_layer3.1.bn3.weight, backbone.aes_layer3.1.bn3.bias, backbone.aes_layer3.1.bn3.running_mean, backbone.aes_layer3.1.bn3.running_var, backbone.aes_layer3.2.conv1.weight, backbone.aes_layer3.2.bn1.weight, backbone.aes_layer3.2.bn1.bias, backbone.aes_layer3.2.bn1.running_mean, backbone.aes_layer3.2.bn1.running_var, backbone.aes_layer3.2.conv2.weight, backbone.aes_layer3.2.bn2.weight, backbone.aes_layer3.2.bn2.bias, backbone.aes_layer3.2.bn2.running_mean, backbone.aes_layer3.2.bn2.running_var, backbone.aes_layer3.2.conv3.weight, backbone.aes_layer3.2.bn3.weight, backbone.aes_layer3.2.bn3.bias, backbone.aes_layer3.2.bn3.running_mean, backbone.aes_layer3.2.bn3.running_var, backbone.aes_layer3.3.conv1.weight, backbone.aes_layer3.3.bn1.weight, backbone.aes_layer3.3.bn1.bias, backbone.aes_layer3.3.bn1.running_mean, backbone.aes_layer3.3.bn1.running_var, backbone.aes_layer3.3.conv2.weight, backbone.aes_layer3.3.bn2.weight, backbone.aes_layer3.3.bn2.bias, backbone.aes_layer3.3.bn2.running_mean, backbone.aes_layer3.3.bn2.running_var, backbone.aes_layer3.3.conv3.weight, backbone.aes_layer3.3.bn3.weight, backbone.aes_layer3.3.bn3.bias, backbone.aes_layer3.3.bn3.running_mean, backbone.aes_layer3.3.bn3.running_var, backbone.aes_layer3.4.conv1.weight, backbone.aes_layer3.4.bn1.weight, backbone.aes_layer3.4.bn1.bias, backbone.aes_layer3.4.bn1.running_mean, backbone.aes_layer3.4.bn1.running_var, backbone.aes_layer3.4.conv2.weight, backbone.aes_layer3.4.bn2.weight, backbone.aes_layer3.4.bn2.bias, backbone.aes_layer3.4.bn2.running_mean, backbone.aes_layer3.4.bn2.running_var, backbone.aes_layer3.4.conv3.weight, backbone.aes_layer3.4.bn3.weight, backbone.aes_layer3.4.bn3.bias, backbone.aes_layer3.4.bn3.running_mean, backbone.aes_layer3.4.bn3.running_var, backbone.aes_layer3.5.conv1.weight, backbone.aes_layer3.5.bn1.weight, backbone.aes_layer3.5.bn1.bias, backbone.aes_layer3.5.bn1.running_mean, backbone.aes_layer3.5.bn1.running_var, backbone.aes_layer3.5.conv2.weight, backbone.aes_layer3.5.bn2.weight, backbone.aes_layer3.5.bn2.bias, backbone.aes_layer3.5.bn2.running_mean, backbone.aes_layer3.5.bn2.running_var, backbone.aes_layer3.5.conv3.weight, backbone.aes_layer3.5.bn3.weight, backbone.aes_layer3.5.bn3.bias, backbone.aes_layer3.5.bn3.running_mean, backbone.aes_layer3.5.bn3.running_var, backbone.aes_layer4.0.conv1.weight, backbone.aes_layer4.0.bn1.weight, backbone.aes_layer4.0.bn1.bias, backbone.aes_layer4.0.bn1.running_mean, backbone.aes_layer4.0.bn1.running_var, backbone.aes_layer4.0.conv2.weight, backbone.aes_layer4.0.bn2.weight, backbone.aes_layer4.0.bn2.bias, backbone.aes_layer4.0.bn2.running_mean, backbone.aes_layer4.0.bn2.running_var, backbone.aes_layer4.0.conv3.weight, backbone.aes_layer4.0.bn3.weight, backbone.aes_layer4.0.bn3.bias, backbone.aes_layer4.0.bn3.running_mean, backbone.aes_layer4.0.bn3.running_var, backbone.aes_layer4.0.downsample.0.weight, backbone.aes_layer4.0.downsample.1.weight, backbone.aes_layer4.0.downsample.1.bias, backbone.aes_layer4.0.downsample.1.running_mean, backbone.aes_layer4.0.downsample.1.running_var, backbone.aes_layer4.1.conv1.weight, backbone.aes_layer4.1.bn1.weight, backbone.aes_layer4.1.bn1.bias, backbone.aes_layer4.1.bn1.running_mean, backbone.aes_layer4.1.bn1.running_var, backbone.aes_layer4.1.conv2.weight, backbone.aes_layer4.1.bn2.weight, backbone.aes_layer4.1.bn2.bias, backbone.aes_layer4.1.bn2.running_mean, backbone.aes_layer4.1.bn2.running_var, backbone.aes_layer4.1.conv3.weight, backbone.aes_layer4.1.bn3.weight, backbone.aes_layer4.1.bn3.bias, backbone.aes_layer4.1.bn3.running_mean, backbone.aes_layer4.1.bn3.running_var, backbone.aes_layer4.2.conv1.weight, backbone.aes_layer4.2.bn1.weight, backbone.aes_layer4.2.bn1.bias, backbone.aes_layer4.2.bn1.running_mean, backbone.aes_layer4.2.bn1.running_var, backbone.aes_layer4.2.conv2.weight, backbone.aes_layer4.2.bn2.weight, backbone.aes_layer4.2.bn2.bias, backbone.aes_layer4.2.bn2.running_mean, backbone.aes_layer4.2.bn2.running_var, backbone.aes_layer4.2.conv3.weight, backbone.aes_layer4.2.bn3.weight, backbone.aes_layer4.2.bn3.bias, backbone.aes_layer4.2.bn3.running_mean, backbone.aes_layer4.2.bn3.running_var, backbone.comp_layer1.0.conv1.weight, backbone.comp_layer1.0.bn1.weight, backbone.comp_layer1.0.bn1.bias, backbone.comp_layer1.0.bn1.running_mean, backbone.comp_layer1.0.bn1.running_var, backbone.comp_layer1.0.conv2.weight, backbone.comp_layer1.0.bn2.weight, backbone.comp_layer1.0.bn2.bias, backbone.comp_layer1.0.bn2.running_mean, backbone.comp_layer1.0.bn2.running_var, backbone.comp_layer1.0.conv3.weight, backbone.comp_layer1.0.bn3.weight, backbone.comp_layer1.0.bn3.bias, backbone.comp_layer1.0.bn3.running_mean, backbone.comp_layer1.0.bn3.running_var, backbone.comp_layer1.0.downsample.0.weight, backbone.comp_layer1.0.downsample.1.weight, backbone.comp_layer1.0.downsample.1.bias, backbone.comp_layer1.0.downsample.1.running_mean, backbone.comp_layer1.0.downsample.1.running_var, backbone.comp_layer1.1.conv1.weight, backbone.comp_layer1.1.bn1.weight, backbone.comp_layer1.1.bn1.bias, backbone.comp_layer1.1.bn1.running_mean, backbone.comp_layer1.1.bn1.running_var, backbone.comp_layer1.1.conv2.weight, backbone.comp_layer1.1.bn2.weight, backbone.comp_layer1.1.bn2.bias, backbone.comp_layer1.1.bn2.running_mean, backbone.comp_layer1.1.bn2.running_var, backbone.comp_layer1.1.conv3.weight, backbone.comp_layer1.1.bn3.weight, backbone.comp_layer1.1.bn3.bias, backbone.comp_layer1.1.bn3.running_mean, backbone.comp_layer1.1.bn3.running_var, backbone.comp_layer1.2.conv1.weight, backbone.comp_layer1.2.bn1.weight, backbone.comp_layer1.2.bn1.bias, backbone.comp_layer1.2.bn1.running_mean, backbone.comp_layer1.2.bn1.running_var, backbone.comp_layer1.2.conv2.weight, backbone.comp_layer1.2.bn2.weight, backbone.comp_layer1.2.bn2.bias, backbone.comp_layer1.2.bn2.running_mean, backbone.comp_layer1.2.bn2.running_var, backbone.comp_layer1.2.conv3.weight, backbone.comp_layer1.2.bn3.weight, backbone.comp_layer1.2.bn3.bias, backbone.comp_layer1.2.bn3.running_mean, backbone.comp_layer1.2.bn3.running_var, backbone.comp_layer2.0.conv1.weight, backbone.comp_layer2.0.bn1.weight, backbone.comp_layer2.0.bn1.bias, backbone.comp_layer2.0.bn1.running_mean, backbone.comp_layer2.0.bn1.running_var, backbone.comp_layer2.0.conv2.weight, backbone.comp_layer2.0.bn2.weight, backbone.comp_layer2.0.bn2.bias, backbone.comp_layer2.0.bn2.running_mean, backbone.comp_layer2.0.bn2.running_var, backbone.comp_layer2.0.conv3.weight, backbone.comp_layer2.0.bn3.weight, backbone.comp_layer2.0.bn3.bias, backbone.comp_layer2.0.bn3.running_mean, backbone.comp_layer2.0.bn3.running_var, backbone.comp_layer2.0.downsample.0.weight, backbone.comp_layer2.0.downsample.1.weight, backbone.comp_layer2.0.downsample.1.bias, backbone.comp_layer2.0.downsample.1.running_mean, backbone.comp_layer2.0.downsample.1.running_var, backbone.comp_layer2.1.conv1.weight, backbone.comp_layer2.1.bn1.weight, backbone.comp_layer2.1.bn1.bias, backbone.comp_layer2.1.bn1.running_mean, backbone.comp_layer2.1.bn1.running_var, backbone.comp_layer2.1.conv2.weight, backbone.comp_layer2.1.bn2.weight, backbone.comp_layer2.1.bn2.bias, backbone.comp_layer2.1.bn2.running_mean, backbone.comp_layer2.1.bn2.running_var, backbone.comp_layer2.1.conv3.weight, backbone.comp_layer2.1.bn3.weight, backbone.comp_layer2.1.bn3.bias, backbone.comp_layer2.1.bn3.running_mean, backbone.comp_layer2.1.bn3.running_var, backbone.comp_layer2.2.conv1.weight, backbone.comp_layer2.2.bn1.weight, backbone.comp_layer2.2.bn1.bias, backbone.comp_layer2.2.bn1.running_mean, backbone.comp_layer2.2.bn1.running_var, backbone.comp_layer2.2.conv2.weight, backbone.comp_layer2.2.bn2.weight, backbone.comp_layer2.2.bn2.bias, backbone.comp_layer2.2.bn2.running_mean, backbone.comp_layer2.2.bn2.running_var, backbone.comp_layer2.2.conv3.weight, backbone.comp_layer2.2.bn3.weight, backbone.comp_layer2.2.bn3.bias, backbone.comp_layer2.2.bn3.running_mean, backbone.comp_layer2.2.bn3.running_var, backbone.comp_layer2.3.conv1.weight, backbone.comp_layer2.3.bn1.weight, backbone.comp_layer2.3.bn1.bias, backbone.comp_layer2.3.bn1.running_mean, backbone.comp_layer2.3.bn1.running_var, backbone.comp_layer2.3.conv2.weight, backbone.comp_layer2.3.bn2.weight, backbone.comp_layer2.3.bn2.bias, backbone.comp_layer2.3.bn2.running_mean, backbone.comp_layer2.3.bn2.running_var, backbone.comp_layer2.3.conv3.weight, backbone.comp_layer2.3.bn3.weight, backbone.comp_layer2.3.bn3.bias, backbone.comp_layer2.3.bn3.running_mean, backbone.comp_layer2.3.bn3.running_var, backbone.comp_layer3.0.conv1.weight, backbone.comp_layer3.0.bn1.weight, backbone.comp_layer3.0.bn1.bias, backbone.comp_layer3.0.bn1.running_mean, backbone.comp_layer3.0.bn1.running_var, backbone.comp_layer3.0.conv2.weight, backbone.comp_layer3.0.bn2.weight, backbone.comp_layer3.0.bn2.bias, backbone.comp_layer3.0.bn2.running_mean, backbone.comp_layer3.0.bn2.running_var, backbone.comp_layer3.0.conv3.weight, backbone.comp_layer3.0.bn3.weight, backbone.comp_layer3.0.bn3.bias, backbone.comp_layer3.0.bn3.running_mean, backbone.comp_layer3.0.bn3.running_var, backbone.comp_layer3.0.downsample.0.weight, backbone.comp_layer3.0.downsample.1.weight, backbone.comp_layer3.0.downsample.1.bias, backbone.comp_layer3.0.downsample.1.running_mean, backbone.comp_layer3.0.downsample.1.running_var, backbone.comp_layer3.1.conv1.weight, backbone.comp_layer3.1.bn1.weight, backbone.comp_layer3.1.bn1.bias, backbone.comp_layer3.1.bn1.running_mean, backbone.comp_layer3.1.bn1.running_var, backbone.comp_layer3.1.conv2.weight, backbone.comp_layer3.1.bn2.weight, backbone.comp_layer3.1.bn2.bias, backbone.comp_layer3.1.bn2.running_mean, backbone.comp_layer3.1.bn2.running_var, backbone.comp_layer3.1.conv3.weight, backbone.comp_layer3.1.bn3.weight, backbone.comp_layer3.1.bn3.bias, backbone.comp_layer3.1.bn3.running_mean, backbone.comp_layer3.1.bn3.running_var, backbone.comp_layer3.2.conv1.weight, backbone.comp_layer3.2.bn1.weight, backbone.comp_layer3.2.bn1.bias, backbone.comp_layer3.2.bn1.running_mean, backbone.comp_layer3.2.bn1.running_var, backbone.comp_layer3.2.conv2.weight, backbone.comp_layer3.2.bn2.weight, backbone.comp_layer3.2.bn2.bias, backbone.comp_layer3.2.bn2.running_mean, backbone.comp_layer3.2.bn2.running_var, backbone.comp_layer3.2.conv3.weight, backbone.comp_layer3.2.bn3.weight, backbone.comp_layer3.2.bn3.bias, backbone.comp_layer3.2.bn3.running_mean, backbone.comp_layer3.2.bn3.running_var, backbone.comp_layer3.3.conv1.weight, backbone.comp_layer3.3.bn1.weight, backbone.comp_layer3.3.bn1.bias, backbone.comp_layer3.3.bn1.running_mean, backbone.comp_layer3.3.bn1.running_var, backbone.comp_layer3.3.conv2.weight, backbone.comp_layer3.3.bn2.weight, backbone.comp_layer3.3.bn2.bias, backbone.comp_layer3.3.bn2.running_mean, backbone.comp_layer3.3.bn2.running_var, backbone.comp_layer3.3.conv3.weight, backbone.comp_layer3.3.bn3.weight, backbone.comp_layer3.3.bn3.bias, backbone.comp_layer3.3.bn3.running_mean, backbone.comp_layer3.3.bn3.running_var, backbone.comp_layer3.4.conv1.weight, backbone.comp_layer3.4.bn1.weight, backbone.comp_layer3.4.bn1.bias, backbone.comp_layer3.4.bn1.running_mean, backbone.comp_layer3.4.bn1.running_var, backbone.comp_layer3.4.conv2.weight, backbone.comp_layer3.4.bn2.weight, backbone.comp_layer3.4.bn2.bias, backbone.comp_layer3.4.bn2.running_mean, backbone.comp_layer3.4.bn2.running_var, backbone.comp_layer3.4.conv3.weight, backbone.comp_layer3.4.bn3.weight, backbone.comp_layer3.4.bn3.bias, backbone.comp_layer3.4.bn3.running_mean, backbone.comp_layer3.4.bn3.running_var, backbone.comp_layer3.5.conv1.weight, backbone.comp_layer3.5.bn1.weight, backbone.comp_layer3.5.bn1.bias, backbone.comp_layer3.5.bn1.running_mean, backbone.comp_layer3.5.bn1.running_var, backbone.comp_layer3.5.conv2.weight, backbone.comp_layer3.5.bn2.weight, backbone.comp_layer3.5.bn2.bias, backbone.comp_layer3.5.bn2.running_mean, backbone.comp_layer3.5.bn2.running_var, backbone.comp_layer3.5.conv3.weight, backbone.comp_layer3.5.bn3.weight, backbone.comp_layer3.5.bn3.bias, backbone.comp_layer3.5.bn3.running_mean, backbone.comp_layer3.5.bn3.running_var, backbone.comp_layer4.0.conv1.weight, backbone.comp_layer4.0.bn1.weight, backbone.comp_layer4.0.bn1.bias, backbone.comp_layer4.0.bn1.running_mean, backbone.comp_layer4.0.bn1.running_var, backbone.comp_layer4.0.conv2.weight, backbone.comp_layer4.0.bn2.weight, backbone.comp_layer4.0.bn2.bias, backbone.comp_layer4.0.bn2.running_mean, backbone.comp_layer4.0.bn2.running_var, backbone.comp_layer4.0.conv3.weight, backbone.comp_layer4.0.bn3.weight, backbone.comp_layer4.0.bn3.bias, backbone.comp_layer4.0.bn3.running_mean, backbone.comp_layer4.0.bn3.running_var, backbone.comp_layer4.0.downsample.0.weight, backbone.comp_layer4.0.downsample.1.weight, backbone.comp_layer4.0.downsample.1.bias, backbone.comp_layer4.0.downsample.1.running_mean, backbone.comp_layer4.0.downsample.1.running_var, backbone.comp_layer4.1.conv1.weight, backbone.comp_layer4.1.bn1.weight, backbone.comp_layer4.1.bn1.bias, backbone.comp_layer4.1.bn1.running_mean, backbone.comp_layer4.1.bn1.running_var, backbone.comp_layer4.1.conv2.weight, backbone.comp_layer4.1.bn2.weight, backbone.comp_layer4.1.bn2.bias, backbone.comp_layer4.1.bn2.running_mean, backbone.comp_layer4.1.bn2.running_var, backbone.comp_layer4.1.conv3.weight, backbone.comp_layer4.1.bn3.weight, backbone.comp_layer4.1.bn3.bias, backbone.comp_layer4.1.bn3.running_mean, backbone.comp_layer4.1.bn3.running_var, backbone.comp_layer4.2.conv1.weight, backbone.comp_layer4.2.bn1.weight, backbone.comp_layer4.2.bn1.bias, backbone.comp_layer4.2.bn1.running_mean, backbone.comp_layer4.2.bn1.running_var, backbone.comp_layer4.2.conv2.weight, backbone.comp_layer4.2.bn2.weight, backbone.comp_layer4.2.bn2.bias, backbone.comp_layer4.2.bn2.running_mean, backbone.comp_layer4.2.bn2.running_var, backbone.comp_layer4.2.conv3.weight, backbone.comp_layer4.2.bn3.weight, backbone.comp_layer4.2.bn3.bias, backbone.comp_layer4.2.bn3.running_mean, backbone.comp_layer4.2.bn3.running_var, rpn_head.conv_loc.weight, rpn_head.conv_loc.bias, rpn_head.conv_shape.weight, rpn_head.conv_shape.bias, rpn_head.feature_adaption.conv_offset.weight, rpn_head.feature_adaption.conv_adaption.weight, rpn_head.conv_cls.weight, rpn_head.conv_cls.bias, rpn_head.conv_reg.weight, rpn_head.conv_reg.bias


